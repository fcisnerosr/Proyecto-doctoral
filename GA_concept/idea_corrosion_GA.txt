% Idea general de cómo integrar dentro de la función objetivo 
% Recorre cada elemento para aplicar el daño
for i = 1:num_elements
    % Recupera la matriz de flexibilidad local del elemento i
    f_local = f_local_matrices{i};

    % Aplicar daño por corrosión
    A_damaged = A_original(i) * (1 - x(i));  % El área se reduce debido a la corrosión
    Iy_damaged = Iy_original(i) * (1 - x(i));  % Inercia en Y se reduce debido a la corrosión
    Iz_damaged = Iz_original(i) * (1 - x(i));  % Inercia en Z se reduce debido a la corrosión

    % Modifica los términos afectados en la matriz de flexibilidad local
    f_local(1, 1) = L / (E * A_damaged);  % Modifica el término afectado por el área
    f_local(1, 7) = -L / (E * A_damaged); % Modifica el término afectado por el área (simetría)
    f_local(7, 1) = -L / (E * A_damaged); % Modifica el término afectado por el área (simetría)
    f_local(7, 7) = L / (E * A_damaged);  % Modifica el término afectado por el área

    % Modificar los términos relacionados con la inercia
    f_local(2, 2) = L^3 / (3 * E * Iy_damaged);  % Modifica el término relacionado con Iy
    f_local(8, 8) = L^3 / (3 * E * Iy_damaged);  % Modifica el término relacionado con Iy (extremo B)
    f_local(2, 8) = -L^3 / (3 * E * Iy_damaged); % Modifica el término relacionado con Iy (simetría)
    f_local(8, 2) = -L^3 / (3 * E * Iy_damaged); % Modifica el término relacionado con Iy (simetría)

    f_local(3, 3) = L^3 / (3 * E * Iz_damaged);  % Modifica el término relacionado con Iz
    f_local(9, 9) = L^3 / (3 * E * Iz_damaged);  % Modifica el término relacionado con Iz (extremo B)
    f_local(3, 9) = -L^3 / (3 * E * Iz_damaged); % Modifica el término relacionado con Iz (simetría)
    f_local(9, 3) = -L^3 / (3 * E * Iz_damaged); % Modifica el término relacionado con Iz (simetría)

    % Transformar la matriz local dañada a coordenadas globales
    K_local_damaged = inv(f_local);  % Invertir matriz de flexibilidad para obtener rigidez
    K_global_element = T_matrices{i}' * K_local_damaged * T_matrices{i};

    % Reensamblar la matriz global de rigidez
    K_global = reensamblar_matriz_global(K_global, K_global_element, i);
end


